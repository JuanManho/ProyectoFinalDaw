{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JRH\\\\OneDrive\\\\DAW\\\\ProyectoDAW\\\\demeter-delivery\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { useNavigate, Link } from 'react-router-dom'; // Para redirigir y enlaces\nimport '../styles/Login.css'; // Ruta hacia tu archivo CSS\nimport config from '../config'; // Configuración con URL de la API\nimport { UserContext } from '../context/UserContext'; // Importa el contexto del usuario\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    contraseña: '' // Cambiado a 'contraseña' para coincidir con el backend\n  });\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate(); // Hook para redirigir\n  const {\n    setUser\n  } = useContext(UserContext); // Obtén la función para actualizar el contexto del usuario\n\n  // Maneja los cambios en los inputs del formulario\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Maneja el envío del formulario\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('Datos enviados:', formData); // Verifica que `email` y `contraseña` tengan valores\n\n    try {\n      const response = await fetch(`${config.API_BASE_URL}/users/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const contentType = response.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        throw new Error('La respuesta del servidor no es JSON válida');\n      }\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Error al iniciar sesión');\n      }\n\n      // Actualizar el estado del usuario en el contexto\n      setUser(data.user);\n\n      // Guardar el usuario en localStorage\n      localStorage.setItem('user', JSON.stringify(data.user));\n      setMessage(`Bienvenido, ${data.user.nombre}`);\n\n      // Redirigir según el rol del usuario\n      if (data.user.rol === 'cliente') {\n        navigate('/cliente');\n      } else if (data.user.rol === 'propietario') {\n        navigate('/owner');\n      } else if (data.user.rol === 'repartidor') {\n        navigate('/repartidor');\n      }\n    } catch (error) {\n      setMessage(`Error: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Iniciar Sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"contrase\\xF1a\",\n          children: \"Contrase\\xF1a:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"contrase\\xF1a\",\n          name: \"contrase\\xF1a\" // Cambiado a 'contraseña'\n          ,\n          value: formData.contraseña // Cambiado a 'contraseña'\n          ,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Iniciar Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"register-link\",\n      children: [\"\\xBFNo tienes cuenta? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Reg\\xEDstrate aqu\\xED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"f3G4Er/4J2Hz8wNhmbd3hTM1gSk=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","Link","config","UserContext","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","email","contraseña","message","setMessage","navigate","setUser","handleChange","e","name","value","target","handleSubmit","preventDefault","console","log","response","fetch","API_BASE_URL","method","headers","body","JSON","stringify","contentType","get","includes","Error","data","json","ok","user","localStorage","setItem","nombre","rol","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","to","_c","$RefreshReg$"],"sources":["C:/Users/JRH/OneDrive/DAW/ProyectoDAW/demeter-delivery/src/pages/Login.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom'; // Para redirigir y enlaces\r\nimport '../styles/Login.css'; // Ruta hacia tu archivo CSS\r\nimport config from '../config'; // Configuración con URL de la API\r\nimport { UserContext } from '../context/UserContext'; // Importa el contexto del usuario\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    contraseña: '', // Cambiado a 'contraseña' para coincidir con el backend\r\n  });\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate(); // Hook para redirigir\r\n  const { setUser } = useContext(UserContext); // Obtén la función para actualizar el contexto del usuario\r\n\r\n  // Maneja los cambios en los inputs del formulario\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  // Maneja el envío del formulario\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log('Datos enviados:', formData); // Verifica que `email` y `contraseña` tengan valores\r\n\r\n    try {\r\n      const response = await fetch(`${config.API_BASE_URL}/users/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const contentType = response.headers.get('content-type');\r\n      if (!contentType || !contentType.includes('application/json')) {\r\n        throw new Error('La respuesta del servidor no es JSON válida');\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Error al iniciar sesión');\r\n      }\r\n\r\n      // Actualizar el estado del usuario en el contexto\r\n      setUser(data.user);\r\n\r\n      // Guardar el usuario en localStorage\r\n      localStorage.setItem('user', JSON.stringify(data.user));\r\n\r\n      setMessage(`Bienvenido, ${data.user.nombre}`);\r\n\r\n      // Redirigir según el rol del usuario\r\n      if (data.user.rol === 'cliente') {\r\n        navigate('/cliente');\r\n      } else if (data.user.rol === 'propietario') {\r\n        navigate('/owner');\r\n      } else if (data.user.rol === 'repartidor') {\r\n        navigate('/repartidor');\r\n      }\r\n    } catch (error) {\r\n      setMessage(`Error: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1>Iniciar Sesión</h1>\r\n      <form className=\"login-form\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"contraseña\">Contraseña:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"contraseña\"\r\n            name=\"contraseña\" // Cambiado a 'contraseña'\r\n            value={formData.contraseña} // Cambiado a 'contraseña'\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Iniciar Sesión</button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n      <p className=\"register-link\">\r\n        ¿No tienes cuenta? <Link to=\"/register\">Regístrate aquí</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}