{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JRH\\\\OneDrive\\\\DAW\\\\ProyectoDAW\\\\demeter-delivery\\\\src\\\\pages\\\\Restaurants.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport config from '../config';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Restaurants = () => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n\n  // Obtener datos de restaurantes desde la API\n  useEffect(() => {\n    const fetchRestaurants = async () => {\n      try {\n        const response = await fetch(`${config.API_BASE_URL}/restaurants`);\n        if (!response.ok) {\n          throw new Error('Error al obtener la lista de restaurantes');\n        }\n        const data = await response.json();\n        setRestaurants(data);\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n    fetchRestaurants();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-4\",\n      children: \"Restaurantes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: restaurant.logo || 'https://via.placeholder.com/150' // Usa el logo si existe, o un placeholder\n            ,\n            alt: restaurant.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: restaurant.nombre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [restaurant.direccion, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 42\n              }, this), \"Tipo: \", restaurant.tipo_comida]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              as: Link,\n              to: `/menu/${restaurant.id}`,\n              variant: \"primary\",\n              children: \"Ver Men\\xFA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, restaurant.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Restaurants, \"UUwaAnmni1jVfIU2TonQ0iTwxYs=\");\n_c = Restaurants;\nexport default Restaurants;\nvar _c;\n$RefreshReg$(_c, \"Restaurants\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","config","Link","jsxDEV","_jsxDEV","Restaurants","_s","restaurants","setRestaurants","fetchRestaurants","response","fetch","API_BASE_URL","ok","Error","data","json","error","console","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","restaurant","md","Img","variant","src","logo","alt","nombre","Body","Title","Text","direccion","tipo_comida","as","to","id","_c","$RefreshReg$"],"sources":["C:/Users/JRH/OneDrive/DAW/ProyectoDAW/demeter-delivery/src/pages/Restaurants.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\r\nimport config from '../config';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Restaurants = () => {\r\n  const [restaurants, setRestaurants] = useState([]);\r\n\r\n  // Obtener datos de restaurantes desde la API\r\n  useEffect(() => {\r\n    const fetchRestaurants = async () => {\r\n      try {\r\n        const response = await fetch(`${config.API_BASE_URL}/restaurants`);\r\n        if (!response.ok) {\r\n          throw new Error('Error al obtener la lista de restaurantes');\r\n        }\r\n        const data = await response.json();\r\n        setRestaurants(data);\r\n      } catch (error) {\r\n        console.error(error.message);\r\n      }\r\n    };\r\n\r\n    fetchRestaurants();\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <h1 className=\"my-4\">Restaurantes</h1>\r\n      <Row>\r\n        {restaurants.map((restaurant) => (\r\n          <Col key={restaurant.id} md={4} className=\"mb-4\">\r\n            <Card>\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src={restaurant.logo || 'https://via.placeholder.com/150'} // Usa el logo si existe, o un placeholder\r\n                alt={restaurant.nombre}\r\n              />\r\n              <Card.Body>\r\n                <Card.Title>{restaurant.nombre}</Card.Title>\r\n                <Card.Text>\r\n                  {restaurant.direccion} <br />\r\n                  Tipo: {restaurant.tipo_comida}\r\n                </Card.Text>\r\n                <Button as={Link} to={`/menu/${restaurant.id}`} variant=\"primary\">Ver Men√∫</Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Restaurants;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}